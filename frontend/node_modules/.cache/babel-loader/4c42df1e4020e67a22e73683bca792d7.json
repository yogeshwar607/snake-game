{"ast":null,"code":"var _jsxFileName = \"/Users/yogi/Code/pe/deep-dive-v1kasjain/projects-exercises/multiplayer-snake-game/frontend/src/components/PlayerEntry.js\";\nimport React, { useState, useEffect } from 'react';\nimport { postApiCall } from '../services';\n\nconst PlayerEntry = () => {\n  const [snake, setSnake] = useState([{\n    x: 0,\n    y: 0\n  }]);\n  const [existingPlayerId, setExistingPlayerId] = useState('');\n  const [newPlayerId, setNewPlayerId] = useState('');\n  useEffect(() => {}, []);\n\n  const createNewPlayerId = e => {\n    console.log('createNewPlayerId', newPlayerId); // make api call and check if playerId uniq , proceed to game selection\n\n    postApiCall({\n      data: {\n        'playerId': newPlayerId\n      },\n      url: '/player/create'\n    }).then(result => {\n      console.log(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const submitPlayerId = e => {\n    console.log('submitPlayerId', existingPlayerId);\n    postApiCall({\n      data: {\n        'playerId': newPlayerId\n      },\n      url: '/player/create'\n    }).then(result => {\n      console.log(result);\n    }).catch(error => {\n      console.error(error);\n    }); // make api call and check if exists , proceed to game selection\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" Enter player Id \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: existingPlayerId,\n    onInput: e => setExistingPlayerId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitPlayerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"In case you do not have playerId , create one below \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \" Create player Id \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: newPlayerId,\n    onInput: e => setNewPlayerId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createNewPlayerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default PlayerEntry;","map":{"version":3,"sources":["/Users/yogi/Code/pe/deep-dive-v1kasjain/projects-exercises/multiplayer-snake-game/frontend/src/components/PlayerEntry.js"],"names":["React","useState","useEffect","postApiCall","PlayerEntry","snake","setSnake","x","y","existingPlayerId","setExistingPlayerId","newPlayerId","setNewPlayerId","createNewPlayerId","e","console","log","data","url","then","result","catch","error","submitPlayerId","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC;AAAEM,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAAD,CAAlC;AAEA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;AAEA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,WAAjC,EAD+B,CAE/B;;AACAR,IAAAA,WAAW,CAAC;AAAEc,MAAAA,IAAI,EAAE;AAAC,oBAAWN;AAAZ,OAAR;AAAkCO,MAAAA,GAAG,EAAE;AAAvC,KAAD,CAAX,CACCC,IADD,CACOC,MAAD,IAAY;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACD,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD,KAND;AAQD,GAXD;;AAYA,QAAMC,cAAc,GAAIT,CAAD,IAAO;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,gBAA9B;AAEAN,IAAAA,WAAW,CAAC;AAAEc,MAAAA,IAAI,EAAE;AAAC,oBAAWN;AAAZ,OAAR;AAAkCO,MAAAA,GAAG,EAAE;AAAvC,KAAD,CAAX,CACCC,IADD,CACOC,MAAD,IAAY;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACD,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD,KAND,EAH4B,CAU5B;AACD,GAXD;;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAO,IAAA,KAAK,EAAEb,gBAAd;AAAgC,IAAA,OAAO,EAAGK,CAAD,IAAOJ,mBAAmB,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE;AAAO,IAAA,KAAK,EAAEZ,WAAd;AAA2B,IAAA,OAAO,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAQ,IAAA,OAAO,EAAEZ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAYD,CA7CD;;AA+CA,eAAeT,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { postApiCall } from '../services';\nconst PlayerEntry = () => {\n  const [snake, setSnake] = useState([{ x: 0, y: 0 }]);\n\n  const [existingPlayerId, setExistingPlayerId] = useState('');\n  const [newPlayerId, setNewPlayerId] = useState('');\n\n  useEffect(() => {}, []);\n\n  const createNewPlayerId = (e) => {\n    console.log('createNewPlayerId', newPlayerId);\n    // make api call and check if playerId uniq , proceed to game selection\n    postApiCall({ data: {'playerId':newPlayerId}, url: '/player/create' })\n    .then((result) => {\n      console.log(result);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n  };\n  const submitPlayerId = (e) => {\n    console.log('submitPlayerId', existingPlayerId);\n\n    postApiCall({ data: {'playerId':newPlayerId}, url: '/player/create' })\n    .then((result) => {\n      console.log(result);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n    // make api call and check if exists , proceed to game selection\n  };\n\n  return (\n    <div>\n      <p> Enter player Id </p>\n      <input value={existingPlayerId} onInput={(e) => setExistingPlayerId(e.target.value)} />\n      <button onClick={submitPlayerId}>Submit</button>\n      <br />\n      <p>In case you do not have playerId , create one below </p>\n      <p> Create player Id </p>\n      <input value={newPlayerId} onInput={(e) => setNewPlayerId(e.target.value)} />\n      <button onClick={createNewPlayerId}>Submit</button>\n    </div>\n  );\n};\n\nexport default PlayerEntry;\n"]},"metadata":{},"sourceType":"module"}